<div id="newTaskModal" class="modal-new-task modal-default fade modal" role="dialog" tabindex="-1">
  <div class="modal-default__content">
      <button type="button" class="modal-default__close" data-dismiss="modal"></button>

      <h2 class="modal-default__title">Create New Task</h2>

      <%= simple_form_for(Task.new) do |f| %>
        <%= f.error_notification %>

        <%= render 'shared/error_messages', object: f.object %>

        <div class="f-default__row">
          <label class="f-default__label" for="task_title">Title</label>
          <input class="f-default__field" required="required" maxlength="200" aria-required="true" type="text" name="task[title]" id="task_title">
        </div>

        <!-- <div class="f-default__row">
          <label class="f-default__label" for="task_description">Description</label>
          <textarea class="f-default__textarea" required="required" maxlength="1500" aria-required="true" name="task[description]" id="task_description"></textarea>
        </div> -->

        <div class="f-default__row">
          <div class="f-default__col-wrap">
            <div class="f-default__col">
              <label class="f-default__label" for="task_description">Budget, min <%= min_fund_budget_in_btc %> BTC</label>
              <input class="f-default__field modal-new-task__btc-amount numeric decimal required" required="required" min="<%= min_fund_budget_in_btc %>" value="<% min_fund_budget_in_btc %>" maxlength="10" aria-required="true" type="number" step="0.001" name="task[budget]" id="task_budget">
              <span id="new_task_btc" class="f-default__convert"></span>
            </div>
            <div class="f-default__col">
              <label class="f-default__label" for="task_description">People Needed</label>
              <input class="f-default__field modal-new-task__member_amount numeric integer required" required="required" maxlength="5" aria-required="true" type="number" step="1" min="1" value="1" name="task[target_number_of_participants]" id="task_target_number_of_participants">
            </div>
            <div class="f-default__col _estimation">
              <label class="f-default__label" for="task_description">Estimated per member amount<span>&nbsp;</label>
              <div class="modal-new-task__team-member-estimation"></div>
              <span id="new_task_btc_per_member" class="f-default__convert"></span>
            </div>
          </div>
        </div>

        <div class="f-default__row">
          <label class="f-default__label" for="task_condition_of_execution">Specifications</label>
          <textarea class="f-default__textarea" required="required" maxlength="1500" aria-required="true" name="task[condition_of_execution]" id="task_condition_of_execution"></textarea>
        </div>

        <div class="f-default__row">
          <label class="f-default__label" for="task_proof_of_execution">Proof of Execution</label>
          <textarea class="f-default__textarea" required="required" maxlength="1500" aria-required="true" name="task[proof_of_execution]" id="task_proof_of_execution"></textarea>
        </div>

        <div class="f-default__row">
          <label class="f-default__label" for="deadline_field">Deadline</label>
          <div class='input-group date deadline_picker'>
              <span class="input-group-addon">
                  <span class="glyphicon glyphicon-calendar">
                  </span>
              </span>
              <input type='text' name="task[deadline]" class="f-default__field" id="deadline_field" required="required" aria-required="true" />
          </div>
          <%= f.hidden_field :project_id, value: @project.id %>
          <input type='hidden' name="task[state]" id="task_state" value="">
        </div>

        <button class="btn-root">Create Task</button>
      <% end %>
  </div>
</div>

<script>
var $estimationData = $('.modal-new-task__team-member-estimation'),
    $estimationDataInUSD = $('#new_task_btc_per_member')
        $btcAmount = $('.modal-new-task__btc-amount'),
        $teamAmount = $('.modal-new-task__member_amount'),
        MIN_DONATION_BTC = parseFloat('<%= min_fund_budget_in_btc %>').toFixed(3),
        CURRENT_BTC_RATE = parseFloat('<%= Payments::BTC::Converter.current_btc_rate  %>').toFixed(2),
        WESERVE_FEE = parseFloat('<%= Payments::BTC::Base.weserve_fee %>').toFixed(3);

    function updateConversion(e) {
        e.preventDefault();
        var newTaskBtc = document.getElementById('new_task_btc');
        newTaskBtc.innerHTML = ''

        var btc = document.getElementById("task_budget").value || 0;
        var usd = (btc * CURRENT_BTC_RATE).toFixed(2);

        newTaskBtc.innerHTML= btc + " BTC = " + usd + " USD";
      }

    $(document)
        .on('keypress.convertToUsd', '#task_budget', function (e) {
              if(e.which == 8 || e.which == 0){
                return true;
              }
              if ((e.which != 46 || $(this).val().indexOf('.') != -1) && (e.which < 48 || e.which > 57)) {
                updateConversion(e);
              }
        })
        .on('input.convertToUsd', '#task_budget', function(e) {
            var $that = $(this),
                currentVal = $that.val();

            if(currentVal.indexOf('.') == 0) {
                $that.val(currentVal.substring(1));
            }
            updateConversion(e);
        })
        .on('input.estimationPerMember', '.modal-new-task__btc-amount, .modal-new-task__member_amount', function() {
            var budget = parseFloat($btcAmount.val()).toFixed(3),
                teamAmount = parseInt($teamAmount.val()),
                numberOfDonations = parseInt((budget / MIN_DONATION_BTC).toFixed(0));

            if ((isNaN(teamAmount) || teamAmount === 0) || (isNaN(budget) || budget === "0.000")) {
              $estimationData.html('');
              $estimationDataInUSD.html('');
            } else {
              var transactionSizeInBytes = numberOfDonations * (180 + 113) + (teamAmount + 2) * 34 + 10 + numberOfDonations;
              var budgetAfterFeesInBTC = (budget - (budget * WESERVE_FEE));
              var perMemberAmountInBTC = budgetAfterFeesInBTC / teamAmount;

              $estimationData.html(perMemberAmountInBTC.toFixed(3));

              if (perMemberAmountInBTC > 0) {
                var perMemberAmountInUSD = perMemberAmountInBTC * CURRENT_BTC_RATE;

                $estimationDataInUSD.html(perMemberAmountInBTC.toFixed(3) + " BTC = " + perMemberAmountInUSD.toFixed(2) + " USD");
              } else {
                $estimationDataInUSD.html('');
              }
            };
        });
</script>
